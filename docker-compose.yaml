version: '3.8'
services:
  postgres:
    image: postgres
    container_name: pg_todo
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: always
  todo:
    image: nestjs
    container_name: todo
    restart: unless-stopped
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - postgres
    environment:
      - PORT=3000
      - NODE_ENV=development
    depends_on:
      - postgres
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_todo
    env_file: .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./pgadmin:/root/.pgadmin
    depends_on:
      - postgres
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: always

networks:
  postgres:
    driver: bridge



#Create container, pull image ,...
# docker-compose up -d --build
#Start db
# npm run docker:db:start 
#Stop db
# npm run docker:db:stop
#Reset volumes
# npm run db:dev:restart
#Start app 
# npm run dev:start
#Stop app 
# npm run dev:stop